// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © TheAimLiu2
// @version=5

// Sections
// 0 Constants
// 1 Inputs
// 2 Functions
// 3 Calculation
// 4 Color Conditions
// 5 Plot
// 6 Debug/label

// -----------------------------------------------------------------------------
//                                 0 Constant                                   
// -----------------------------------------------------------------------------
PRECISION_LIMIT = 6 // significant numbers

this_ticker = syminfo.tickerid
this_tz = syminfo.timezone

_15m = 900
_1h = 3600  
_4h = 14400
_1d = 86400
_1w = 604800
_1M = 2628003

// ------------------------------ candle colors --------------------------------
// #b59410
var gold_color = color.rgb(181, 148, 16), var inverse_gold = color.rgb(74, 107, 239)
// #e4572e
var red_color = color.rgb(228, 87, 46), var inverse_red = color.rgb(27,168,209)
// #66bb6a 
var lime_color = color.rgb(102, 187, 106), var inverse_lime = color.rgb(153,68,149)
// #9C27B0
var magenta_color = color.fuchsia, var inverse_magenta = color.rgb(31,191,4)
// #00BCD4
var cyan_color = color.aqua, var inverse_cyan = color.rgb(255,67,53)
// #2196F3
var blue_color = color.blue, var inverse_blue = color.rgb(222,105,12)
// #363A45
var black_color = color.black
var inverse_black = color.rgb(240,239,244)
var clear_color = color.new(color.white,100)

indicator("Fair Value Gap 5, 2024", shorttitle= "FVG5,2024", overlay=true, precision=PRECISION_LIMIT)
// -----------------------------------------------------------------------------
//                                  1 inputs                                    
// -----------------------------------------------------------------------------

g1 = "FVG color"
tip11 = 'Auto FVG color'
fvg_color = input.color(color.red, title="FVG color", group=g1, inline='l1g1')
auto_color = input.bool(true,title="Auto color", group=g1,tooltip=tip11, inline='l1g1')


g2 = "fvg mode"
mode = input.string("RAWs",title="FVG mode", options=["RAWs"],group=g2, inline='l1g2')
// thres = input.float(1.1,title="threshold",group=g1,inline="l2g1")
// per = input.int(70,title="percentile",group=g2,inline="l2g2")

g3 = "moving average"
src = input.source(close, title="ma src",group=g3,inline="l1g3")
ema_length = input.int(14,title="length",group=g3,inline="l1g3")
is_show_ema = input.bool(true,title="show ma", group=g3,inline='l2g3')
ema_color = input.color(black_color, title="Color", group=g3, inline='l2g3')

// -----------------------------------------------------------------------------
//                                 2 Functions                                  
// -----------------------------------------------------------------------------

// ----------------------------- Auto Color -------------------------------
// [bull_fvg, bear_fvg, code]
this_tf_second = timeframe.in_seconds(timeframe.period)
[bull_fvg, bear_fvg, code] = switch 
    this_tf_second <= _15m  => [inverse_red,red_color,1]
    (this_tf_second > _15m and this_tf_second <= _1h) => [inverse_lime,lime_color,2]
    (this_tf_second > _1h and this_tf_second <= _4h) => [inverse_magenta,magenta_color,3]
    (this_tf_second > _4h and this_tf_second <= _1d) => [inverse_gold,gold_color,4]
    (this_tf_second > _1d and this_tf_second <= _1w) => [inverse_cyan,cyan_color,5]
    (this_tf_second > _1w and this_tf_second <= _1M) => [inverse_blue,blue_color,6]
    // Default used when the three first cases do not match.
    => [inverse_black,black_color,9]

// -----------------------------------------------------------------------------
//                                3 Calculation                                 
// -----------------------------------------------------------------------------
// FVG must have 3 candle confirmation. Kernel = 3
// BISI = buy side imbal sell side ineff
// SIBI = sell side imbal buy side ineff

// ran = math.abs(close - open) //range
// pin_ran = math.abs(high - low) - math.abs(close - open) // pin range
// is_longstick = ran/pin_ran < thres
// is_higher_than_percentile = ran[1] >= ta.percentile_linear_interpolation(ran,lookback,per)
// middle_bar_expansion = ran[2] < ran[1] and ran[1] > ran

is_BISI = close[1] - open[1] > 0
BISI_has_gap = is_BISI ? low > high[2] : low[2] > high

is_fvg = switch mode
    "RAWs" => BISI_has_gap
    // Default
    => BISI_has_gap

// ----------------------------------- EMA -------------------------------------
ema = ta.ema(src,ema_length)
// -----------------------------------------------------------------------------
//                             4 Color Conditions                               
// -----------------------------------------------------------------------------
// ------------------------------- FVG OHLCs ----------------------------------
// o o o
// h h h
// l l l
// c c c

fvg_o = is_BISI ? low : high
fvg_c = is_BISI ? high[2] : low[2]
fvg_h = is_BISI ? fvg_c : fvg_o
fvg_l = is_BISI ? fvg_o : fvg_c

auto_fvg_color = bear_fvg
// is_fvg_breaker = is_BISI ? close > high[1] : close < low[1] // not that useful
// is_fvg_valid = BISI_has_gap

body_color = auto_color ? auto_fvg_color : fvg_color
last_bar_condition = last_bar_index - bar_index < 1

plot_body_color = is_fvg and last_bar_condition ? color.new(color.yellow,20) : is_fvg and is_BISI ? body_color : is_fvg and not is_BISI ? color.new(body_color,50) : na 
plot_wick_color = plot_body_color

// breaker_border_col = is_fvg_breaker ? color.red : na
plot_border_color = is_fvg and last_bar_condition ? color.yellow : is_fvg and is_BISI ? inverse_black : is_fvg and not is_BISI ? color.red : na
plot_ema_color = is_show_ema ? ema_color : clear_color
// -----------------------------------------------------------------------------
//                                   5 plot                                     
// -----------------------------------------------------------------------------
plotcandle(fvg_o,fvg_h,fvg_l,fvg_c,title="FVG",color=plot_body_color, wickcolor=plot_wick_color,bordercolor=plot_border_color, display=display.pane)
plot(ema,title="ma",display=display.all,color=plot_ema_color)
// barcolor(plot_body_color , title="FVG", offset=-1)
// plot(pin_ran/ran,title="range",display=display.status_line,color=color.black)

// -----------------------------------------------------------------------------
//                              6 Debug Section                                 
// -----------------------------------------------------------------------------
// plotchar(is_fvg,title="debug", char="F",location=location.abovebar, offset=-1) // ok
// plot(d,title="debug2",color=candle_color,display=display.status_line)

// display status On the chart's last bar

// var label myLabel1 = na
// if last_bar_index == bar_index
    
//     label_msg = str.tostring(timeframe.in_seconds(this_tf) <= 604800)
//     myLabel1 := label.new(x=bar_index + 1, y=close, color=color.red, style=label.style_label_left, size=size.normal, tooltip=label_msg)
//     label.set_text(id=myLabel1, text=label_msg)